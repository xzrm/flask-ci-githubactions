# # This workflow will install Python dependencies, run tests and lint with a single version of Python
# # For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# name: Python application

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - run: |
#         git fetch --prune --unshallow
#     - name: Set up Python 3.9
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.9
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest
#     - name: Deploy to Heroku
#       env:
#         HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
#       if: github.ref == 'refs/heads/master' && job.status == 'success'
#       run: |
#         git remote add heroku https://heroku:$HEROKU_API_TOKEN@git.heroku.com/secret-mountain-86958.git
#         git push heroku HEAD:master -f
name: Push Container to Heroku

on: 
  push:
    branches:
      - docker-heroku

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Login to Heroku Container registry
      env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_TOKEN }}
      run: heroku container:login 
    - name: Build and push
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_TOKEN }}
      run: heroku container:push -a cicd-test-app web 
    - name: Release
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_TOKEN }}
      run: heroku container:release -a cicd-test-app web 
